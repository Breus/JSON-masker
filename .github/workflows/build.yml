
name: Build
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*'
    paths-ignore:
      - README.adoc
  pull_request:
    branches:
      - master
    paths-ignore:
      - README.adoc

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - id: generate-snapshot
        name: Generate snapshot version
        shell: bash
        run: |
          version=$(git describe --tag --abbrev=0 | cut -c 2- || echo 0.1.0)
          regex="^([0-9]+).([0-9]+).([0-9]+)$"
          if [[ $version =~ $regex ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
          
            patch=$(($patch + 1))
          
            new_version="${major}.${minor}.${patch}"
          
            if ! [[ $new_version =~ $regex ]]; then
              echo "New version $new_version is not a valid SemVer"
              exit 1
            fi
          
            echo "snapshot-version=${new_version}-SNAPSHOT" >> $GITHUB_OUTPUT
          else
            echo "Version $version is not a valid SemVer"
            exit 1
          fi

      - name: Build
        run: ./gradlew -Pversion=${{ steps.get_version.outputs.version }} build

      - name: Upload SNAPSHOT artifacts to Sonatype
        id: upload_release_artifacts
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PRIV_KEY: ${{ secrets.GPG_PRIV_KEY }}
          GPG_PASS_PHRASE: ${{ secrets.GPG_PASS_PHRASE }}
        run: ./gradlew -Pversion=${{ steps.generate-snapshot.outputs.snapshot-version }} publishAllPublicationsToSonatypeRepository closeSonatypeStagingRepository