package dev.blaauwendraad.masker.json;

import dev.blaauwendraad.masker.json.config.JsonMaskingConfig;
import org.junit.jupiter.api.Test;

import java.util.Set;

import static org.assertj.core.api.Assertions.assertThat;

class MaskingNonStandardCharactersTest {

    @Test
    void maskingNonStandardCharacters() {
        JsonMasker jsonMasker = JsonMasker.getMasker(Set.of("Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚", "ðŸ’©"));

        assertThat(jsonMasker.mask(
                """
                        {
                          "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                          "otherKey": null,
                          "ðŸ’©": "shit happens",
                          "someObject": {
                            "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                            "otherKey": null,
                            "ðŸ’©": {
                                "ðŸ’©": "shit happens"
                            }
                          },
                          "someArray": [
                            "ðŸ’©",
                            "ðŸ’©",
                            {
                              "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                              "otherKey": null,
                              "ðŸ’©": {
                                  "ðŸ’©": "shit happens"
                              }
                            }
                          ]
                        }
                        """
        )).isEqualTo("""
                {
                  "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "***",
                  "otherKey": null,
                  "ðŸ’©": "***",
                  "someObject": {
                    "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "***",
                    "otherKey": null,
                    "ðŸ’©": {
                        "ðŸ’©": "***"
                    }
                  },
                  "someArray": [
                    "ðŸ’©",
                    "ðŸ’©",
                    {
                      "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "***",
                      "otherKey": null,
                      "ðŸ’©": {
                          "ðŸ’©": "***"
                      }
                    }
                  ]
                }
                """);
    }

    @Test
    void maskingNonStandardCharactersInAllowMode() {
        JsonMasker jsonMasker = JsonMasker.getMasker(
                JsonMaskingConfig.builder().allowKeys("Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚", "otherKey", "someArray").build()
        );

        assertThat(jsonMasker.mask(
                """
                        {
                          "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                          "otherKey": null,
                          "ðŸ’©": "shit happens",
                          "someObject": {
                            "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                            "otherKey": null,
                            "ðŸ’©": {
                                "ðŸ’©": "shit happens"
                            }
                          },
                          "someArray": [
                            "ðŸ’©",
                            "ðŸ’©",
                            {
                              "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                              "otherKey": null,
                              "ðŸ’©": {
                                  "ðŸ’©": "shit happens"
                              }
                            }
                          ]
                        }
                        """
        )).isEqualTo("""
                {
                  "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                  "otherKey": null,
                  "ðŸ’©": "***",
                  "someObject": {
                    "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                    "otherKey": null,
                    "ðŸ’©": {
                        "ðŸ’©": "***"
                    }
                  },
                  "someArray": [
                    "ðŸ’©",
                    "ðŸ’©",
                    {
                      "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                      "otherKey": null,
                      "ðŸ’©": {
                          "ðŸ’©": "shit happens"
                      }
                    }
                  ]
                }
                """);
    }

    @Test
    void maskingWithUnicodeCharacters() {
        JsonMasker jsonMasker = JsonMasker.getMasker(
                JsonMaskingConfig.builder()
                        .maskKeys("ðŸ’©", k -> k.maskStringCharactersWith("ðŸ’©"))
                        .build()
        );

        assertThat(jsonMasker.mask(
                """
                        {
                          "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                          "otherKey": null,
                          "ðŸ’©": "shit happens",
                          "someObject": {
                            "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                            "otherKey": null,
                            "ðŸ’©": {
                                "ðŸ’©": "shit happens"
                            }
                          },
                          "someArray": [
                            "ðŸ’©",
                            "ðŸ’©",
                            {
                              "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                              "otherKey": null,
                              "ðŸ’©": {
                                  "ðŸ’©": "shit happens"
                              }
                            }
                          ]
                        }
                        """
        )).isEqualTo("""
                {
                  "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                  "otherKey": null,
                  "ðŸ’©": "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©",
                  "someObject": {
                    "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                    "otherKey": null,
                    "ðŸ’©": {
                        "ðŸ’©": "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©"
                    }
                  },
                  "someArray": [
                    "ðŸ’©",
                    "ðŸ’©",
                    {
                      "Ð¿Ñ€Ð¸Ð²Ñ–Ñ‚": "hello",
                      "otherKey": null,
                      "ðŸ’©": {
                          "ðŸ’©": "ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©ðŸ’©"
                      }
                    }
                  ]
                }
                """);
    }
}
